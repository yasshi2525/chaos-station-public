name: build

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/coverage.svg"
  pull_request:
    branches:
      - master
jobs:
  archive:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node-
      - uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ env.CODECOV_TOKEN }}
          files: lcov.info
          directory: coverage
        if: ${{ env.CODECOV_TOKEN != '' }}
      - run: npm run export-html
      - run: unzip game.zip
      - run: echo "VERSION=$(cat package.json | jq '.version' | tr -d '"')" >> $GITHUB_ENV
      - run: echo "TIMESTAMP=$(TZ='Asia/Tokyo' date "+%Y%m%d-%H%M%S")" >> $GITHUB_ENV
      - run: echo "REPO=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPO }}-v${{ env.VERSION }}-${{ env.TIMESTAMP }}
          path: game
